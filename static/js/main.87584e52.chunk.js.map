{"version":3,"sources":["hooks/useMyState.tsx","modules/time/actions.ts","modules/time/index.ts","components/Timer.tsx","hooks/useMyActions.tsx","modules/time/reducer.ts","components/Header.tsx","components/Share.tsx","modules/index.ts","reportWebVitals.ts","components/Home.tsx","components/Footer.tsx","components/About.tsx","App.tsx","index.tsx"],"names":["useTime","useSelector","state","time","SET_TIME","SET_MSG","setTime","createAction","setMsg","Timer","hh","mm","ss","isOver","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","isTimeOver","setIsTimeOver","location","useHistory","msg","initMsg","useTimeActions","setPadding","useCallback","value","toString","padStart","useEffect","Buffer","from","search","substr","countdown","setInterval","clearInterval","className","defaultProps","dispatch","useDispatch","initTime","timeReducer","createReducer","flag","payload","newTime","numberTime","Number","stringTime","isNaN","length","padEnd","Header","to","baseURL","CSSPlugin","Share","shareLink","setShareLink","isEditAbleMsg","setIsEditAbleMsg","isEditAbleTime","setIsEditAbleTime","isAnimate","setIsAnimate","inputRef","useRef","modalRef","shareUrl","replace","trim","ref","type","onClick","e","preventDefault","el","current","select","document","execCommand","tl","TimelineLite","clear","fromTo","opacity","duration","ease","Power3","easeOut","delay","onComplete","spellCheck","readOnly","htmlFor","name","id","checked","onChange","inputValue","target","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","isDefault","match","useRouteMatch","input","params","toggleState","setToggleState","viewState","setViewState","convertS2HMS","hour","parseInt","min","sec","Math","floor","viewTimer","endTime","now","moment","diffSec","diff","abs","diffSec2","clone","add","hour2","min2","sec2","sto","setTimeout","prev","clearTimeout","Footer","href","rel","About","App","basename","process","exact","path","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87584e52.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { RootState } from '../modules';\r\n\r\nfunction useTime() {\r\n  const timeState = useSelector((state: RootState) => state.time);\r\n\r\n  return timeState;\r\n}\r\n\r\nexport default useTime;\r\n","import { createAction } from 'typesafe-actions';\r\n\r\n// 액션 type\r\nexport const SET_TIME = 'time/SET_TIME';\r\nexport const SET_MSG = 'time/SET_MSG';\r\n\r\n// 액션 생성 함수\r\nexport const setTime = createAction(SET_TIME)<string>();\r\nexport const setMsg = createAction(SET_MSG)<string>();\r\n","export { default } from './reducer';\r\nexport * from './actions';\r\nexport * from './types';\r\n","import './Timer.css';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useTimeActions from '../hooks/useMyActions';\r\nimport useTime from '../hooks/useMyState';\r\n\r\ntype Props = {\r\n  hh: number;\r\n  mm: number;\r\n  ss: number;\r\n  isOver?: boolean;\r\n};\r\n\r\n/**\r\n * 남은 시간을 넘겨주면 표시해 주는 컴포넌트\r\n */\r\nfunction Timer({ hh, mm, ss, isOver }: Props) {\r\n  const [hours, setHours] = useState(hh);\r\n  const [minutes, setMinutes] = useState(mm);\r\n  const [seconds, setSeconds] = useState(ss);\r\n  const [isTimeOver, setIsTimeOver] = useState(isOver);\r\n  const { location } = useHistory();\r\n  const { msg } = useTime();\r\n  const { initMsg } = useTimeActions();\r\n\r\n  const setPadding = useCallback((value: number) => {\r\n    return value.toString().padStart(2, '0');\r\n  }, []);\r\n\r\n  // msg초기화\r\n  useEffect(() => {\r\n    initMsg(Buffer.from(location.search.substr(3), 'base64').toString('utf-8'));\r\n  }, [initMsg, location.search]);\r\n\r\n  // 새로 값 들어오면 초기화\r\n  useEffect(() => {\r\n    // console.info(`timer rerender`);\r\n    setHours(hh);\r\n    setMinutes(mm);\r\n    setSeconds(ss);\r\n    setIsTimeOver(isOver);\r\n  }, [hh, mm, ss, isOver]);\r\n\r\n  // 타이머\r\n  useEffect(() => {\r\n    const interval = -1;\r\n    const countdown = setInterval(() => {\r\n      if (isTimeOver) {\r\n        return;\r\n      }\r\n\r\n      if (seconds > 0) {\r\n        setSeconds(seconds + interval);\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          if (hours === 0) {\r\n            setIsTimeOver(true);\r\n            clearInterval(countdown);\r\n          } else {\r\n            setHours(hours + interval);\r\n            setMinutes(59);\r\n            setSeconds(59);\r\n          }\r\n          clearInterval(countdown);\r\n        } else {\r\n          setMinutes(minutes + interval);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(countdown);\r\n    };\r\n  }, [minutes, seconds, hours, isTimeOver]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className={`timer__content${isTimeOver ? ' over' : ''}`}>\r\n        <span className=\"timer__hour\">{setPadding(hours)}</span>\r\n        <span>:</span>\r\n        <span className=\"timer__min\">{setPadding(minutes)}</span>\r\n        <span>:</span>\r\n        <span className=\"timer__sec\">{setPadding(seconds)}</span>\r\n      </div>\r\n      {isTimeOver ? <h2>{msg}</h2> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nTimer.defaultProps = {\r\n  isOver: false,\r\n};\r\n\r\nexport default Timer;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\nimport { setMsg, setTime } from '../modules/time';\r\n\r\nconst useTimeActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initTime = useCallback(\r\n    (time: string) => {\r\n      dispatch(setTime(time));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const initMsg = useCallback(\r\n    (msg: string) => {\r\n      dispatch(setMsg(msg));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return { initTime, initMsg };\r\n};\r\n\r\nexport default useTimeActions;\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { SET_MSG, SET_TIME } from './actions';\r\nimport { TimeAction } from './types';\r\n\r\n// 초깃값 설정\r\nconst initialState: TimeState = {\r\n  time: '1800',\r\n  flag: false,\r\n  msg: `퇴근합시다!`,\r\n};\r\n\r\nconst timeReducer = createReducer<TimeState, TimeAction>(initialState, {\r\n  [SET_TIME]: (state, { payload: time }) => {\r\n    // console.info(`i'm reducer`);\r\n    let newTime = time;\r\n    const numberTime = Number(time);\r\n    const stringTime = numberTime.toString();\r\n\r\n    if (\r\n      Number.isNaN(numberTime) ||\r\n      time.length > 4 ||\r\n      numberTime > 2400 ||\r\n      numberTime < 0\r\n    ) {\r\n      return { ...state, flag: true, time: 'invalid' };\r\n    }\r\n\r\n    if (time.length < 4) {\r\n      newTime = `${stringTime.padEnd(4, '0')}`;\r\n    }\r\n\r\n    return { ...state, flag: true, time: newTime };\r\n  },\r\n  [SET_MSG]: (state, { payload: msg }) => {\r\n    if (!msg) return state;\r\n\r\n    return { ...state, msg };\r\n  },\r\n});\r\n\r\nexport default timeReducer;\r\n","import './Header.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useTime from '../hooks/useMyState';\r\n\r\nfunction Header() {\r\n  const { time, msg } = useTime();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link\r\n        to={`/${time}${\r\n          msg.length > 1\r\n            ? `?m=${Buffer.from(msg, 'utf-8').toString('base64')}`\r\n            : ''\r\n        }`}\r\n      >\r\n        <h3>go home time</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './Share.css';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Power3, TimelineLite } from 'gsap';\r\nimport CSSPlugin from 'gsap/CSSPlugin';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst C = CSSPlugin;\r\n\r\nconst baseURL = 'https://chinsun9.github.io/go-home-time/';\r\n\r\nfunction Share() {\r\n  const [shareLink, setShareLink] = useState(baseURL);\r\n  const [isEditAbleMsg, setIsEditAbleMsg] = useState(false);\r\n  const [isEditAbleTime, setIsEditAbleTime] = useState(false);\r\n  const [time, setTime] = useState('18:00');\r\n  const [msg, setMsg] = useState('');\r\n  const [isAnimate, setIsAnimate] = useState(false);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n\r\n  const onTimeCheckboxChangeHandler = () => {\r\n    setIsEditAbleTime(!isEditAbleTime);\r\n  };\r\n\r\n  const onMsgCheckboxChangeHandler = () => {\r\n    setIsEditAbleMsg(!isEditAbleMsg);\r\n  };\r\n\r\n  const onLinkClickHandler = (\r\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    const el = inputRef.current;\r\n\r\n    el?.select();\r\n    document.execCommand('copy');\r\n\r\n    // 모달 1초간 뛰우기\r\n    const tl = new TimelineLite();\r\n    if (isAnimate) {\r\n      return;\r\n    }\r\n    setIsAnimate(true);\r\n    tl.clear()\r\n      .fromTo(\r\n        modalRef.current,\r\n        { opacity: 0 },\r\n        { opacity: 1, duration: 0.7, ease: Power3.easeOut }\r\n      )\r\n      .to(modalRef.current, {\r\n        opacity: 0,\r\n        duration: 0.7,\r\n        ease: Power3.easeOut,\r\n        delay: 1,\r\n        onComplete: () => {\r\n          setIsAnimate(false);\r\n        },\r\n      });\r\n  };\r\n\r\n  const onTimeChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    setTime(inputValue);\r\n  };\r\n\r\n  const onMsgChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    setMsg(inputValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let shareUrl = baseURL + time.replace(':', '');\r\n    shareUrl =\r\n      isEditAbleMsg && msg.length > 1\r\n        ? `${shareUrl}?m=${Buffer.from(msg.trim(), 'utf-8').toString('base64')}`\r\n        : shareUrl;\r\n    setShareLink(shareUrl);\r\n  }, [time, msg, isEditAbleMsg]);\r\n\r\n  return (\r\n    <div className=\"share\">\r\n      <h4>링크 공유하기</h4>\r\n      <div className=\"share__text\">\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          value={shareLink}\r\n          onClick={onLinkClickHandler}\r\n          spellCheck={false}\r\n          readOnly\r\n        />\r\n        <div className=\"share__modal\" ref={modalRef}>\r\n          <span>링크를 복사했습니다.</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"share__checkbox\">\r\n        <label htmlFor=\"ableTime\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"ableTime\"\r\n            id=\"ableTime\"\r\n            checked={isEditAbleTime}\r\n            onChange={onTimeCheckboxChangeHandler}\r\n          />\r\n          <span>퇴근시간</span>\r\n        </label>\r\n\r\n        {isEditAbleTime && (\r\n          <input type=\"time\" value={time} onChange={onTimeChangeHandler} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"share__checkbox\">\r\n        <label htmlFor=\"ableMsg\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"ableMsg\"\r\n            id=\"ableMsg\"\r\n            checked={isEditAbleMsg}\r\n            onChange={onMsgCheckboxChangeHandler}\r\n          />\r\n          <span>메시지</span>\r\n        </label>\r\n\r\n        {isEditAbleMsg && (\r\n          <input type=\"text\" value={msg} onChange={onMsgChangeHandler} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Share;\r\n","import { combineReducers } from 'redux';\r\nimport time from './time';\r\n\r\nconst rootReducer = combineReducers({ time });\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable no-restricted-globals */\r\nimport './Home.css';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Timer from './Timer';\r\nimport useTimeActions from '../hooks/useMyActions';\r\nimport useTime from '../hooks/useMyState';\r\n\r\ntype MatchParams = {\r\n  input: string;\r\n};\r\n\r\ntype Props = {\r\n  isDefault?: boolean;\r\n};\r\n\r\nfunction Home({ isDefault = false }: Props) {\r\n  const match = useRouteMatch<MatchParams>();\r\n  const { input } = match?.params as MatchParams;\r\n  const { initTime } = useTimeActions();\r\n  const { flag, time } = useTime();\r\n  const [toggleState, setToggleState] = useState(false);\r\n  const [viewState, setViewState] = useState<JSX.Element>();\r\n\r\n  const convertS2HMS = useCallback((seconds: number) => {\r\n    const hour = parseInt(`${seconds / 3600}`, 10);\r\n    const min = parseInt(`${(seconds % 3600) / 60}`, 10);\r\n    const sec = Math.floor(seconds % 60);\r\n\r\n    return { hour, min, sec };\r\n  }, []);\r\n\r\n  const viewTimer = useCallback((): JSX.Element => {\r\n    if (time === 'invalid') {\r\n      return <h1 className=\"wow\">실험 정신이 대단하군요..!</h1>;\r\n    }\r\n\r\n    let hh = 0;\r\n    let mm = 0;\r\n    let endTime;\r\n    const now = moment();\r\n\r\n    if (isDefault) {\r\n      endTime = moment(\r\n        `${Number(time.substr(0, 2))}:${Number(time.substr(2, 2))}`,\r\n        'hh:mm'\r\n      );\r\n    } else {\r\n      hh = Number(time.substr(0, 2));\r\n      mm = Number(time.substr(2, 2));\r\n      endTime = moment(`${hh}:${mm}`, 'hh:mm');\r\n    }\r\n\r\n    const diffSec = endTime.diff(now, 'seconds');\r\n\r\n    const { hour, min, sec } = convertS2HMS(diffSec);\r\n\r\n    // console.info(diffSec);\r\n\r\n    // -43200초 === 12시간\r\n    if (diffSec < 0 && diffSec > -43200) {\r\n      return (\r\n        <Timer\r\n          hh={Math.abs(hour)}\r\n          mm={Math.abs(min)}\r\n          ss={Math.abs(sec)}\r\n          isOver\r\n        />\r\n      );\r\n    }\r\n\r\n    if (diffSec < 0) {\r\n      // console.info('새벽에 근무하는 사람들을 위한..1');\r\n\r\n      const diffSec2 = endTime.clone().add(1, 'd').diff(now, 'seconds');\r\n\r\n      const { hour: hour2, min: min2, sec: sec2 } = convertS2HMS(diffSec2);\r\n      return <Timer hh={hour2} mm={min2} ss={sec2} />;\r\n    }\r\n\r\n    if (diffSec > 43200) {\r\n      // console.info('새벽에 근무하는 사람들을 위한..2');\r\n\r\n      const diffSec2 = endTime.clone().add(-1, 'd').diff(now, 'seconds');\r\n\r\n      const { hour: hour2, min: min2, sec: sec2 } = convertS2HMS(diffSec2);\r\n      return (\r\n        <Timer\r\n          hh={Math.abs(hour2)}\r\n          mm={Math.abs(min2)}\r\n          ss={Math.abs(sec2)}\r\n          isOver\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Timer hh={hour} mm={min} ss={sec} />;\r\n  }, [convertS2HMS, isDefault, time]);\r\n\r\n  useEffect(() => {\r\n    // 초기화\r\n    if (!flag && input) {\r\n      initTime(input);\r\n    }\r\n  }, [flag, initTime, input]);\r\n\r\n  // 1분마다 시간 동기화\r\n  useEffect(() => {\r\n    const sto = setTimeout(() => {\r\n      setToggleState((prev) => !prev);\r\n      setViewState(viewTimer());\r\n    }, 60 * 1000);\r\n\r\n    return () => {\r\n      clearTimeout(sto);\r\n    };\r\n  }, [toggleState, viewState, viewTimer]);\r\n\r\n  // 최초 타이머 초기화\r\n  useEffect(() => {\r\n    setViewState(viewTimer());\r\n  }, [viewTimer]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <span>퇴근시간 {time === 'invalid' ? input : time} 까지...</span>\r\n\r\n      {viewState}\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.defaultProps = {\r\n  isDefault: false,\r\n};\r\n\r\nexport default Home;\r\n","import './Footer.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <a\r\n        href=\"https://unsplash.com/photos/WVIkqpoKz1I\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        Photo by @swayte on Unsplash\r\n      </a>\r\n      <Link to=\"about\">about</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import './About.css';\r\nimport React from 'react';\r\nimport Share from './Share';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about\">\r\n      <p>\r\n        집이 가고 싶은 사람들을 위한 타이머\r\n        <br />\r\n        <br />이 타이머는 로컬에서 setTimeout을 통해 타이머를 표현합니다. 따라서\r\n        시간이 지남에 따라 오차가 생길 수 있습니다. 하지만 이제 1분마다\r\n        동기화합니다\r\n        <br />\r\n        <br />\r\n        source code here :{' '}\r\n        <a\r\n          href=\"https://github.com/chinsun9/go-home-time\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          github repo\r\n        </a>\r\n      </p>\r\n\r\n      <Share />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport About from './components/About';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            <Home isDefault />\r\n          </Route>\r\n\r\n          <Route path=\"/:input\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <p>im not found</p>\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './modules';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}