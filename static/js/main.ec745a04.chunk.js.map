{"version":3,"sources":["reportWebVitals.ts","components/Timer.tsx","components/Home.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Timer","hh","mm","ss","dispaly","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","countdown","setInterval","clearInterval","setPadding","value","substr","className","Home","endTime","now","moment","match","useRouteMatch","input","params","format","Number","length","console","log","diffSec","diff","hour","Math","floor","min","sec","tmp","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec745a04.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\r\nimport './Timer.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ntype Props = {\r\n  hh: number;\r\n  mm: number;\r\n  ss: number;\r\n};\r\n\r\nfunction Timer({ hh, mm, ss }: Props) {\r\n  //\r\n  const dispaly = hh + mm;\r\n\r\n  const [hours, setHours] = useState(hh);\r\n  const [minutes, setMinutes] = useState(mm);\r\n  const [seconds, setSeconds] = useState(ss);\r\n\r\n  useEffect(() => {\r\n    const interval = -1;\r\n    const countdown = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds + interval);\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          if (hours === 0) {\r\n            clearInterval(countdown);\r\n          } else {\r\n            setHours(hours + interval);\r\n            setMinutes(59);\r\n            setSeconds(59);\r\n          }\r\n          clearInterval(countdown);\r\n        } else {\r\n          setMinutes(minutes + interval);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(countdown);\r\n  }, [minutes, seconds, hours]);\r\n\r\n  const setPadding = (value: number) => {\r\n    const padding = '00';\r\n\r\n    return (padding + value).substr(-2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <span>{dispaly}</span>\r\n      <div className=\"timer__content\">\r\n        <span className=\"timer__hour\">{setPadding(hours)}</span>\r\n        <span>:</span>\r\n        <span className=\"timer__min\">{setPadding(minutes)}</span>\r\n        <span>:</span>\r\n        <span className=\"timer__sec\">{setPadding(seconds)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import './Home.css';\r\nimport React from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Timer from './Timer';\r\n\r\ntype MatchParams = {\r\n  input: string;\r\n};\r\n\r\nfunction Home() {\r\n  const now = moment();\r\n  let endTime;\r\n\r\n  const match = useRouteMatch<MatchParams>(`/test/:input`);\r\n\r\n  const { input } = match?.params as MatchParams;\r\n\r\n  const convertS2HMS = (seconds: number) => {\r\n    const hour = Math.floor(seconds / 3600);\r\n    const min = Math.floor((seconds % 3600) / 60);\r\n    const sec = Math.floor(seconds % 60);\r\n\r\n    return { hour, min, sec };\r\n  };\r\n\r\n  const tmp = () => {\r\n    if (!Number(input) || input.length > 4 || input.length === 3) {\r\n      console.log(`invaild`);\r\n      return null;\r\n    }\r\n\r\n    let hh = 0;\r\n    let mm = 0;\r\n\r\n    hh = Number(input.substr(0, 2));\r\n\r\n    if (input.length === 4) {\r\n      mm = Number(input.substr(2, 2));\r\n    }\r\n\r\n    endTime = moment(`${hh}:${mm}`, 'hh:mm');\r\n    console.log(now.format());\r\n    console.log(endTime.format());\r\n\r\n    const diffSec = endTime.diff(now, 'seconds');\r\n\r\n    const { hour, min, sec } = convertS2HMS(diffSec);\r\n\r\n    console.log(diffSec, { hour, min, sec });\r\n\r\n    return <Timer hh={hour} mm={min} ss={sec} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <p>im home</p>\r\n      <p>current time : {now.format()}</p>\r\n      {tmp()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/test/:input\">\r\n            <p>im test</p>\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            <p>im /</p>\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <p>im not found</p>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\n// import { createStore } from 'redux';\n// import rootReducer from './modules';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    <App />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}