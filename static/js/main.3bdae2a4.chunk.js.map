{"version":3,"sources":["components/Timer.tsx","App.tsx","modules/index.ts","reportWebVitals.ts","index.tsx"],"names":["Timer","hh","mm","ss","today","moment","useState","minutes","setMinutes","seconds","setSeconds","useEffect","countdown","setInterval","clearInterval","className","format","App","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAuDeA,MA7Cf,YAAsC,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,GACjBC,EAAQC,MADsB,EAGNC,mBAASJ,GAHH,mBAG7BK,EAH6B,KAGpBC,EAHoB,OAINF,mBAASH,GAJH,mBAI7BM,EAJ6B,KAIpBC,EAJoB,KAuBpC,OAjBAC,qBAAU,WACR,IAAMC,EAAYC,aAAY,WACxBJ,EAAU,GACZC,EAAWD,EAAU,GAEP,IAAZA,IACc,IAAZF,EACFO,cAAcF,IAEdJ,EAAWD,EAAU,GACrBG,EAAW,QAGd,KACH,OAAO,kBAAMI,cAAcF,MAC1B,CAACL,EAASE,IAGX,sBAAKM,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,wCAEF,qBAAKA,UAAU,aAAf,SACE,+BAAOR,MAET,qBAAKQ,UAAU,aAAf,SACE,+BAAON,SAIX,sBAAKM,UAAU,MAAf,UACE,gDACA,+BAAOX,EAAMY,kBCrCNC,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,CAAOd,GAAI,EAAGC,GAAI,GAAIC,GAAI,QCHjBe,EAFKC,YAAgB,ICYrBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAQC,YAAYZ,GAE1Ba,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.3bdae2a4.chunk.js","sourcesContent":["import './Timer.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\ntype Props = {\r\n  hh: number;\r\n  mm: number;\r\n  ss: number;\r\n};\r\n\r\nfunction Timer({ hh, mm, ss }: Props) {\r\n  const today = moment();\r\n\r\n  const [minutes, setMinutes] = useState(mm);\r\n  const [seconds, setSeconds] = useState(ss);\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          clearInterval(countdown);\r\n        } else {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(countdown);\r\n  }, [minutes, seconds]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"timer__content\">\r\n        <div className=\"timer__hour\">\r\n          <span>03</span>\r\n        </div>\r\n        <div className=\"timer__min\">\r\n          <span>{minutes}</span>\r\n        </div>\r\n        <div className=\"timer__sec\">\r\n          <span>{seconds}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"tmp\">\r\n        <span>current time</span>\r\n        <span>{today.format()}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Timer from './components/Timer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Timer hh={1} mm={10} ss={59} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './modules';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}